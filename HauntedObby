local a=string.char;local b=string.byte;local c=string.sub;local d=bit32 or bit;local e=d.bxor;local f=table.concat;local g=table.insert;local function h(i,j)local k={}for l=1,#i do g(k,a(e(b(c(i,l,l+1)),b(c(j,1+l%#j,1+l%#j+1)))%256))end;return f(k)end;local m=tonumber;local n=string.byte;local o=string.char;local p=string.sub;local q=string.gsub;local r=string.rep;local s=table.concat;local t=table.insert;local u=math.ldexp;local v=getfenv or function()return _ENV end;local w=setmetatable;local x=pcall;local y=select;local z=unpack or table.unpack;local A=tonumber;local function B(C,D,...)local E=1;local F;C=q(p(C,5),h("\1\75","\187\47\101\61"),function(G)if n(G,2)==79 then local H=0;while true do if 0==H then F=m(p(G,1,1))return""end end else local I=o(m(G,16))if F then local J=0;local K;while true do if J==1 then return K end;if 0==J then K=r(I,F)F=nil;J=1 end end else return I end end end)local function L(M,N,O)if O then local P=0;local Q;while true do if P==0 then Q=M/2^(N-1)%2^(O-1-(N-1)+1)return Q-Q%(2-1)end end else local R=0;local S;while true do if R==0 then S=(5-3)^(N-(1-0))return M%(S+S)>=S and 1 or 0 end end end end;local function T()local U=n(C,E,E)E=E+1;return U end;local function V()local W=0;local X;local Y;while true do if W==0 then X,Y=n(C,E,E+2)E=E+2;W=1 end;if 1==W then return Y*256+X end end end;local function Z()local _=0;local a0;local a1;local a2;local a3;while true do if _==1 then return a3*(43216383-26439167)+a2*65536+a1*256+a0 end;if _==0 then a0,a1,a2,a3=n(C,E,E+3)E=E+4;_=1 end end end;local function a4()local a5=Z()local a6=Z()local a7=1;local a8=L(a6,1,20)*2^(651-(555+64))+a5;local a9=L(a6,21,31)local aa=L(a6,32)==1 and-(932-(857+74))or 1;if a9==0 then if a8==0 then return aa*0 else a9=1;a7=0 end elseif a9==2047 then return a8==0 and aa*1/0 or aa*NaN end;return u(aa,a9-1023)*(a7+a8/2^52)end;local function ab(ac)local ad=0;local ae;local af;while true do if ad==1 then ae=p(C,E,E+ac-1)E=E+ac;ad=2 end;if ad==3 then return s(af)end;if ad==2 then af={}for ag=1,#ae do af[ag]=o(n(p(ae,ag,ag)))end;ad=3 end;if 0==ad then ae=nil;if not ac then local ah=0;while true do if 0==ah then ac=Z()if ac==0 then return""end;break end end end;ad=1 end end end;local ai=Z;local function aj(...)return{...},y("#",...)end;local function ak()local al={}local am={}local an={}local ao={al,am,nil,an}local ap=Z()local aq={}for ar=1,ap do local as=0;local at;local au;while true do if as==0 then at=T()au=nil;as=1 end;if as==1 then if at==1 then au=T()~=0 elseif at==2 then au=a4()elseif at==3 then au=ab()end;aq[ar]=au;break end end end;ao[930-(214+713)]=T()for av=1,Z()do local aw=0;local ax;while true do if aw==0 then ax=T()if L(ax,1,1)==0 then local ay=L(ax,1+1,3)local az=L(ax,4,6)local aA={V(),V(),nil,nil}if ay==0 then aA[1+2]=V()aA[4]=V()elseif ay==1 then aA[3]=Z()elseif ay==2 then aA[3]=Z()-(879-(282+595))^16 elseif ay==3 then local aB=0;while true do if aB==0 then aA[3]=Z()-2^16;aA[1641-(1523+114)]=V()break end end end;if L(az,1,1)==1 then aA[2+0]=aq[aA[2]]end;if L(az,2,2)==1 then aA[3]=aq[aA[3]]end;if L(az,3,3)==1 then aA[4]=aq[aA[4]]end;al[av]=aA end;break end end end;for aC=1,Z()do am[aC-1]=ak()end;return ao end;local function aD(aE,aF,aG)local aH=aE[1]local aI=aE[2]local aJ=aE[3]return function(...)local aK=aH;local aL=aI;local aM=aJ;local aN=aj;local aO=1;local aP=-1;local aQ={}local aR={...}local aS=y("#",...)-1;local aT={}local aU={}for aV=0,aS do if aV>=aM then aQ[aV-aM]=aR[aV+1]else aU[aV]=aR[aV+1]end end;local aW=aS-aM+1;local aX;local aY;while true do aX=aK[aO]aY=aX[1]if aY<=45 then if aY<=22 then if aY<=14-4 then if aY<=4 then if aY<=1066-(68+997)then if aY==0 then local aZ=0;local a_;while true do if aZ==0 then a_=aX[2]aU[a_]=aU[a_](aU[a_+1])break end end else local b0=0;local b1;local b2;local b3;local b4;while true do if b0==2 then for b5=b1,aP do local b6=0;while true do if b6==0 then b4=b4+1271-(226+1044)aU[b5]=b2[b4]break end end end;break end;if b0==1 then aP=b3+b1-1;b4=0;b0=2 end;if 0==b0 then b1=aX[2]b2,b3=aN(aU[b1](aU[b1+1]))b0=1 end end end elseif aY<=2 then local b7=0;local b8;local b9;while true do if b7==1 then for ba=b8+1,aX[4]do b9=b9 ..aU[ba]end;aU[aX[2]]=b9;break end;if b7==0 then b8=aX[3]b9=aU[b8]b7=1 end end elseif aY>3 then for bb=aX[2],aX[3]do aU[bb]=nil end elseif aU[aX[2]]==aX[4]then aO=aO+1 else aO=aX[3]end elseif aY<=7 then if aY<=5 then local bc=0;local bd;local be;local bf;local bg;while true do if bc==0 then bd=aX[2]be,bf=aN(aU[bd](z(aU,bd+1,aP)))bc=1 end;if bc==1 then aP=bf+bd-1;bg=0-0;bc=2 end;if bc==2 then for bh=bd,aP do bg=bg+1;aU[bh]=be[bg]end;break end end elseif aY==6 then local bi=0;local bj;while true do if 0==bi then bj=aX[2]aU[bj]=aU[bj]()break end end else local bk=aX[2]local bl,bm=aN(aU[bk](aU[bk+1]))aP=bm+bk-1;local bn=0;for bo=bk,aP do bn=bn+1;aU[bo]=bl[bn]end end elseif aY<=125-(32+85)then if aU[aX[2]]then aO=aO+1 else aO=aX[3]end elseif aY>9 then aU[aX[2]]=aU[aX[3]]%aU[aX[4]]else local bp=aX[2+0]aU[bp]=aU[bp]()end elseif aY<=16 then if aY<=13 then if aY<=11 then local bq=0;local br;local bs;while true do if 1==bq then aU[br+1]=bs;aU[br]=bs[aX[4]]break end;if 0==bq then br=aX[2]bs=aU[aX[3]]bq=1 end end elseif aY>12 then local bt=0;local bu;while true do if bt==0 then bu=aX[2]aU[bu](aU[bu+1])break end end else aU[aX[2]]=aU[aX[3]]end elseif aY<=14 then local bv=0;local bw;while true do if bv==0 then bw=aX[2]aU[bw](z(aU,bw+1,aP))break end end elseif aY>15 then local bx=aX[2]do return z(aU,bx,aP)end else local by=aX[2]local bz=aU[by]for bA=by+1,aP do t(bz,aU[bA])end end elseif aY<=19 then if aY<=4+13 then local bB=aX[2]local bC=aU[aX[960-(892+65)]]aU[bB+1]=bC;aU[bB]=bC[aX[4]]elseif aY==18 then aU[aX[2]]=aU[aX[3]][aX[4]]else aU[aX[2]]=aX[3]end elseif aY<=20 then aU[aX[2]][aX[7-4]]=aX[4]elseif aY>38-17 then local bD=aX[2]aU[bD]=aU[bD](aU[bD+1])elseif aU[aX[2]]then aO=aO+1 else aO=aX[4-1]end elseif aY<=383-(87+263)then if aY<=27 then if aY<=24 then if aY==23 then aO=aX[3]else aU[aX[2]]=aG[aX[183-(67+113)]]end elseif aY<=25 then aU[aX[2]]=aG[aX[3]]elseif aY==26 then local bE=0;local bF;while true do if bE==0 then bF=aX[2]do return aU[bF](z(aU,bF+1,aX[3+0]))end;break end end else local bG=0;local bH;local bI;local bJ;while true do if 1==bG then bJ=aU[bH+2]if bJ>0-0 then if bI>aU[bH+1]then aO=aX[3]else aU[bH+3]=bI end elseif bI<aU[bH+1]then aO=aX[3]else aU[bH+3]=bI end;break end;if bG==0 then bH=aX[2]bI=aU[bH]bG=1 end end end elseif aY<=30 then if aY<=28 then aU[aX[2]]=aX[3]+aU[aX[4]]elseif aY==29 then do return end else local bK=aL[aX[3]]local bL;local bM={}bL=w({},{[h("\57\5\183\7\54\3\34","\82\102\90\222\105")]=function(bN,bO)local bP=bM[bO]return bP[1][bP[2]]end,[h("\148\116\201\82\9\181\95\42\174\83","\78\203\43\167\55\126\220\49")]=function(bQ,bR,bS)local bT=0;local bU;while true do if 0==bT then bU=bM[bR]bU[1][bU[2]]=bS;break end end end})for bV=1,aX[4]do local bW=0;local bX;while true do if bW==0 then aO=aO+1;bX=aK[aO]bW=1 end;if bW==1 then if bX[1]==12 then bM[bV-1]={aU,bX[3+0]}else bM[bV-1]={aF,bX[3]}end;aT[#aT+1]=bM;break end end end;aU[aX[2]]=aD(bK,bL,aG)end elseif aY<=31 then aU[aX[2]]=aU[aX[3]]%aX[4]elseif aY>32 then local bY=aX[2]aU[bY](z(aU,bY+953-(802+150),aX[3]))else local bZ=0;local b_;local c0;local c1;local c2;while true do if 0==bZ then b_=aX[2]c0,c1=aN(aU[b_](z(aU,b_+1,aP)))bZ=1 end;if bZ==2 then for c3=b_,aP do c2=c2+1;aU[c3]=c0[c2]end;break end;if 1==bZ then aP=c1+b_-(2-1)c2=0;bZ=2 end end end elseif aY<=70-31 then if aY<=36 then if aY<=34 then local c4=0;local c5;local c6;local c7;local c8;while true do if c4==0 then c5=aX[2]c6,c7=aN(aU[c5](z(aU,c5+1+0,aX[3])))c4=1 end;if c4==1 then aP=c7+c5-1;c8=0;c4=2 end;if c4==2 then for c9=c5,aP do c8=c8+1;aU[c9]=c6[c8]end;break end end elseif aY==35 then local ca=aX[2]local cb={aU[ca](aU[ca+1])}local cc=997-(915+82)for cd=ca,aX[4]do cc=cc+1;aU[cd]=cb[cc]end else local ce=aX[2]do return aU[ce](z(aU,ce+1,aX[3]))end end elseif aY<=37 then aU[aX[5-3]]=#aU[aX[3]]elseif aY==38 then local cf=0;local cg;local ch;local ci;while true do if cf==0 then cg=aX[2+0]ch={aU[cg](aU[cg+1])}cf=1 end;if cf==1 then ci=0;for cj=cg,aX[4]do local ck=0;while true do if ck==0 then ci=ci+1;aU[cj]=ch[ci]break end end end;break end end else aU[aX[2]]=#aU[aX[3]]end elseif aY<=42 then if aY<=40 then aU[aX[2]]=aU[aX[3]]%aU[aX[4-0]]elseif aY>41 then local cl=0;local cm;while true do if cl==0 then cm=aX[2]aU[cm]=aU[cm](z(aU,cm+1,aP))break end end else aU[aX[1189-(1069+118)]][aU[aX[3]]]=aU[aX[4]]end elseif aY<=43 then aU[aX[2]][aX[3]]=aX[4]elseif aY>99-55 then local cn=0;local co;local cp;local cq;while true do if 0==cn then co=aX[2]cp=aU[co+2]cn=1 end;if cn==2 then if cp>0 then if cq<=aU[co+1]then aO=aX[3]aU[co+3]=cq end elseif cq>=aU[co+1]then aO=aX[3]aU[co+6-3]=cq end;break end;if cn==1 then cq=aU[co]+cp;aU[co]=cq;cn=2 end end else aU[aX[2]]=aU[aX[3]]%aX[4]end elseif aY<=68 then if aY<=56 then if aY<=50 then if aY<=47 then if aY>46 then aU[aX[2]]=aD(aL[aX[3]],nil,aG)else aG[aX[3]]=aU[aX[1+1]]end elseif aY<=48 then aU[aX[3-1]][aX[3]]=aU[aX[4]]elseif aY>49 then local cr=0;local cs;local ct;local cu;while true do if cr==0 then cs=aX[2]ct=aU[cs]cr=1 end;if 1==cr then cu=aU[cs+2]if cu>0+0 then if ct>aU[cs+792-(368+423)]then aO=aX[3]else aU[cs+3]=ct end elseif ct<aU[cs+1]then aO=aX[9-6]else aU[cs+3]=ct end;break end end else aU[aX[20-(10+8)]]=aU[aX[3]]end elseif aY<=53 then if aY<=51 then aU[aX[2]]=aD(aL[aX[3]],nil,aG)elseif aY>52 then local cv=aX[2]local cw,cx=aN(aU[cv](z(aU,cv+1,aX[11-8])))aP=cx+cv-1;local cy=442-(416+26)for cz=cv,aP do cy=cy+1;aU[cz]=cw[cy]end else local cA=0;local cB;local cC;while true do if cA==1 then for cD=cB+1,aP do t(cC,aU[cD])end;break end;if cA==0 then cB=aX[6-4]cC=aU[cB]cA=1 end end end elseif aY<=54 then aU[aX[2]]=aF[aX[3]]elseif aY>55 then if not aU[aX[1+1]]then aO=aO+1 else aO=aX[3]end else aU[aX[2]]=aU[aX[3]][aX[4]]end elseif aY<=62 then if aY<=59 then if aY<=57 then aO=aX[3]elseif aY>58 then aU[aX[2]][aU[aX[3]]]=aX[4]else aU[aX[2]][aU[aX[3]]]=aU[aX[4]]end elseif aY<=60 then if aX[2]==aU[aX[4]]then aO=aO+1-0 else aO=aX[441-(145+293)]end elseif aY==61 then aU[aX[2]]=aX[3]else aU[aX[2]]={}end elseif aY<=65 then if aY<=63 then aU[aX[2]]()elseif aY>64 then if aU[aX[2]]==aX[4]then aO=aO+1 else aO=aX[3]end else local cE=aX[2]aU[cE](aU[cE+1])end elseif aY<=66 then local cF=aX[432-(44+386)]local cG=aX[1490-(998+488)]local cH=cF+2;local cI={aU[cF](aU[cF+1],aU[cH])}for cJ=1,cG do aU[cH+cJ]=cI[cJ]end;local cK=cI[1]if cK then aU[cH]=cK;aO=aX[3]else aO=aO+1 end elseif aY==67 then local cL=aX[2]local cM=aX[4]local cN=cL+2;local cO={aU[cL](aU[cL+1],aU[cN])}for cP=1,cM do aU[cN+cP]=cO[cP]end;local cQ=cO[1]if cQ then local cR=0;while true do if cR==0 then aU[cN]=cQ;aO=aX[3]break end end else aO=aO+1 end else aG[aX[3]]=aU[aX[2]]end elseif aY<=79 then if aY<=24+49 then if aY<=70 then if aY>69 then do return end else do return aU[aX[2]]()end end elseif aY<=59+12 then local cS=0;local cT;local cU;local cV;while true do if 0==cS then cT=aL[aX[3]]cU=nil;cS=1 end;if cS==2 then for cW=1,aX[4]do local cX=0;local cY;while true do if 0==cX then aO=aO+1;cY=aK[aO]cX=1 end;if cX==1 then if cY[1]==12 then cV[cW-1]={aU,cY[3]}else cV[cW-1]={aF,cY[3]}end;aT[#aT+1]=cV;break end end end;aU[aX[2]]=aD(cT,cU,aG)break end;if cS==1 then cV={}cU=w({},{[h("\28\33\26\10\195\193\70","\202\67\126\115\100\167\164\62")]=function(cZ,c_)local d0=cV[c_]return d0[773-(201+571)][d0[2]]end,[h("\224\22\142\83\76\214\39\132\83\67","\59\191\73\224\54")]=function(d1,d2,d3)local d4=0;local d5;while true do if d4==0 then d5=cV[d2]d5[1][d5[2]]=d3;break end end end})cS=2 end end elseif aY>72 then aU[aX[2]]={}else do return aU[aX[2]]()end end elseif aY<=76 then if aY<=74 then for d6=aX[8-6],aX[2+1]do aU[d6]=nil end elseif aY>75 then aU[aX[2]]()else local d7=0;local d8;local d9;while true do if d7==0 then d8=aX[3]d9=aU[d8]d7=1 end;if d7==1 then for da=d8+1,aX[4]do d9=d9 ..aU[da]end;aU[aX[2]]=d9;break end end end elseif aY<=77 then aU[aX[2]]=aF[aX[3]]elseif aY==284-206 then aU[aX[2]]=aU[aX[3]]+aX[4]else local db=aX[2]aU[db]=aU[db](z(aU,db+1,aX[3]))end elseif aY<=301-216 then if aY<=82 then if aY<=80 then local dc=0;local dd;local de;local df;while true do if dc==0 then dd=aX[861-(814+45)]de=aU[dd+2]dc=1 end;if dc==1 then df=aU[dd]+de;aU[dd]=df;dc=2 end;if 2==dc then if de>0 then if df<=aU[dd+1]then aO=aX[3]aU[dd+3]=df end elseif df>=aU[dd+2-1]then local dg=0;while true do if 0==dg then aO=aX[3]aU[dd+1+2]=df;break end end end;break end end elseif aY==81 then aU[aX[2]][aX[3]]=aU[aX[4]]elseif not aU[aX[1+1]]then aO=aO+1 else aO=aX[3]end elseif aY<=83 then aU[aX[2]]=aX[3]+aU[aX[4]]elseif aY==84 then local dh=aX[2]aU[dh](z(aU,dh+886-(261+624),aX[3]))else local di=0;local dj;while true do if 0==di then dj=aX[2]do return z(aU,dj,aP)end;break end end end elseif aY<=155-67 then if aY<=86 then local dk=0;local dl;while true do if dk==0 then dl=aX[1082-(1020+60)]aU[dl]=aU[dl](z(aU,dl+1,aP))break end end elseif aY>1510-(630+793)then aU[aX[2]]=aU[aX[3]]+aX[4]else local dm=0;local dn;while true do if 0==dm then dn=aX[2]aU[dn](z(aU,dn+1,aP))break end end end elseif aY<=89 then local dp=aX[2]aU[dp]=aU[dp](z(aU,dp+1,aX[3]))elseif aY>90 then aU[aX[2]][aU[aX[3]]]=aX[4]elseif aX[2]==aU[aX[4]]then aO=aO+3-2 else aO=aX[3]end;aO=aO+1 end end end;return aD(ak(),{},D)(...)endv(),...)
